#version 450 core

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 1, rgba32f) uniform image2D outputTexture;

uniform vec2 resolution;
uniform dmat4 transform;
uniform int maxIterations;
uniform int samples;
uniform vec2 offsets[16];

vec3 sample_mandelbrot(dvec2 c) {
  dvec2 z = dvec2(0.0);
  int iterations = 0;

  while (z.x * z.x + z.y * z.y < 4.0 && iterations < maxIterations) {
    z = dvec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;
    iterations++;
  }
  
  float t = float(iterations) / float(maxIterations);
  return vec3(
    sin(3.0 + t * 6.28318),
    sin(3.0 + t * 6.28318 + 2.09439),
    sin(3.0 + t * 6.28318 + 4.18878)
  ) * (1 - t);
}

void main() {
  vec3 color = vec3(0.0);
  for (int i = 0; i < samples; i++) {
    dvec2 c = (transform * dvec4(gl_GlobalInvocationID.xy + offsets[i], 0, 1)).xy;
    color += sample_mandelbrot(c);
  }
  color /= float(samples);
  imageStore(outputTexture, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.0));
}