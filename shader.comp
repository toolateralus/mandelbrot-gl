#version 450 core

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 1, rgba32f) uniform image2D outputTexture;

uniform vec2 resolution;
uniform float zoom;
uniform vec2 pan;

void main() {
  ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
  
  if (pixelCoords.x < int(resolution.x) && pixelCoords.y < int(resolution.y)) {
    vec2 c = (vec2(pixelCoords) / resolution) * 2.0 - vec2(1.5, 1.0);
    c = c / zoom + pan; // Apply zoom and pan
    vec2 z = vec2(0.0);
    int iterations = 0;
    const int maxIterations = 100;
    
    while (length(z) < 2.0 && iterations < maxIterations) {
      z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;
      iterations++;
    }
    
    float color = float(iterations) / float(maxIterations);
    vec3 col = vec3(
        0.5 + 0.5 * cos(3.0 + color * 6.28318),
        0.5 + 0.5 * cos(3.0 + color * 6.28318 + 2.09439),
        0.5 + 0.5 * cos(3.0 + color * 6.28318 + 4.18878)
    );
    col = mix(vec3(0.5), col, 0.5); // Blend with gray to reduce saturation
    imageStore(outputTexture, pixelCoords, vec4(col, 1.0));
  }
}